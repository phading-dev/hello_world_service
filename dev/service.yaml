apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-service-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-world-service-pod
  template:
    metadata:
      labels:
        app: hello-world-service-pod
    spec:
      serviceAccountName: hello-world-service-account
      containers:
      - name: hello-world-service-container
        image: gcr.io/phading-dev/hello-world-service:latest
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: monitoring.googleapis.com/v1
kind: PodMonitoring
metadata:
  name: hello-world-service-monitoring
spec:
  selector:
    matchLabels:
      app: hello-world-service-pod
  endpoints:
  - port: 8080
    path: /metricsz
    interval: 30s
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: hello-world-service-neg-health-check
spec:
  healthCheck:
    port: 8080
    type: HTTP
    requestPath: /healthz
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    beta.cloud.google.com/backend-config: '{"default": "hello-world-service-neg-health-check"}'
spec:
  selector:
    app: hello-world-service-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: phading-certificate
spec:
  domains:
    - dev.phading.org
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phading-ingress-external
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "phading-cluster-external-ip"
    networking.gke.io/managed-certificates: "phading-certificate"
spec:
  rules:
  - http:
      paths:
      - path: /hw
        pathType: Prefix
        backend:
          service:
            name: hello-world-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phading-ingress-internal
  annotations:
    kubernetes.io/ingress.class: "gce-internal"
    kubernetes.io/ingress.regional-static-ip-name: "phading-cluster-internal-ip"
spec:
  rules:
  - http:
      paths:
      - path: /hw
        pathType: Prefix
        backend:
          service:
            name: hello-world-service
            port:
              number: 80
